import org.springframework.web.server.ServerWebExchange;
import org.springframework.cloud.gateway.filter.GatewayFilter;
import org.springframework.cloud.gateway.filter.factory.AbstractGatewayFilterFactory;
import org.springframework.stereotype.Component;
import java.util.List;

@Component
public class PermissionMappingFilter extends AbstractGatewayFilterFactory<PermissionMappingFilter.Config> {

    private final PermissionService permissionService;

    public PermissionMappingFilter(PermissionService permissionService) {
        this.permissionService = permissionService;
    }

    @Override
    public GatewayFilter apply(Config config) {
        return (exchange, chain) -> {
            String rolesHeader = exchange.getRequest().getHeaders().getFirst("X-User-Roles");

            if (rolesHeader != null && rolesHeader.contains("APPLICATION_ADMIN")) {
                List<String> permissions = permissionService.getPermissionsForRole("APPLICATION_ADMIN");
                exchange.getRequest().mutate()
                        .header("X-User-Permissions", String.join(",", permissions))
                        .build();
            }
            
            return chain.filter(exchange);
        };
    }

    public static class Config {
        // Add configuration if needed
    }
}
