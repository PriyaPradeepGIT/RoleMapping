import jakarta.annotation.PostConstruct;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;

@Component
public class CSVJobScheduler {

    private final InactiveUserRepository inactiveUserRepository;

    public CSVJobScheduler(InactiveUserRepository inactiveUserRepository) {
        this.inactiveUserRepository = inactiveUserRepository;
    }

    // ✅ Run job immediately when app starts (for testing)
    @PostConstruct
    public void runJobOnStartup() {
        generateCSVFile();
    }

    // ✅ Runs automatically every day at 2 AM (actual scheduled job)
    @Scheduled(cron = "0 0 2 * * ?")
    public void generateCSVFile() {
        String directoryPath = "C:\\csvjobs\\";
        String fileName = "InactiveAccounts_" + LocalDate.now().format(DateTimeFormatter.ofPattern("MMddyyyy")) + ".csv";
        String fullFilePath = directoryPath + fileName;

        try {
            // Ensure the directory exists
            File directory = new File(directoryPath);
            if (!directory.exists()) {
                directory.mkdirs();  // Create folder if it doesn't exist
            }

            // Create CSV file
            try (FileWriter writer = new FileWriter(fullFilePath)) {
                writer.append("UserId,Action\n");

                List<String> inactiveAccounts = inactiveUserRepository.findInactiveUserIds();
                for (String userId : inactiveAccounts) {
                    writer.append(userId).append(",remove\n");
                }

                System.out.println("✅ CSV File Created Successfully: " + fullFilePath);
            }
        } catch (IOException e) {
            System.err.println("❌ Error writing CSV file: " + e.getMessage());
        }
    }
}
